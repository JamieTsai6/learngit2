import java.util.Scanner;
public class PasswordManager {
	    // 加密字符串《修改位置》
	    public static String encrypt(String s) {
	        // 检查字符串是否为空或者超过长度限制
	        if (s == null || s.length() == 0 || s.length() > 16) {
	            return "无效的输入";
	        }
	        // 检查字符串是否只包含数字或者大小写字母
	        for (char c : s.toCharArray()) {
	            if (!Character.isDigit(c) && !Character.isLetter(c)) {
	                return "无效的输入";
	            }
	        }
	        // 将每个字符的ASCII码加上它在字符串中的位置和偏移值3
	        char[] chars = s.toCharArray();
	        for (int i = 0; i < chars.length; i++) {
	            chars[i] = (char) (chars[i] + i + 1 + 3);
	        }
	        // 将字符串的第一位和最后一位调换顺序
	        char temp = chars[0];
	        chars[0] = chars[chars.length - 1];
	        chars[chars.length - 1] = temp;
	        // 将字符串反转
	        String result = new StringBuilder(new String(chars)).reverse().toString();
	        return result;
	    }

	    // 解密字符串
	    public static String decrypt(String s) {
	        // 检查字符串是否为空或者超过长度限制
	        if (s == null || s.length() == 0 || s.length() > 16) {
	            return "无效的输入";
	        }
	        // 检查字符串是否只包含数字或者大小写字母
	        for (char c : s.toCharArray()) {
	            if (!Character.isDigit(c) && !Character.isLetter(c)) {
	                return "无效的输入";
	            }
	        }
	        // 将字符串反转
	        char[] chars = new StringBuilder(s).reverse().toString().toCharArray();
	        // 将字符串的第一位和最后一位调换顺序
	        char temp = chars[0];
	        chars[0] = chars[chars.length - 1];
	        chars[chars.length - 1] = temp;
	        // 将每个字符的ASCII码减去它在字符串中的位置和偏移值3
	        for (int i = 0; i < chars.length; i++) {
	            chars[i] = (char) (chars[i] - i - 1 - 3);
	        }
	        String result = new String(chars);
	        return result;
	    }

	    public static void main(String[] args) {
	        Scanner scanner = new Scanner(System.in);
	        System.out.println("欢迎使用密码管理系统");
	        System.out.println("请选择功能：");
	        System.out.println("1.加密");
	        System.out.println("2.解密");
	        
	        int choice = scanner.nextInt();
	        
	        switch (choice) {
	            case 1:
	                System.out.println("请输入要加密的字符串（每个字符为数字或者大小写字母，长度不超过16）：");
	                String input = scanner.next();
	                String output = encrypt(input);
	                System.out.println("加密后的字符串为：" + output);
	                break;
	            case 2:
	                System.out.println("请输入要解密的字符串（每个字符为数字或者大小写字母，长度不超过16）：");
	                input = scanner.next();
	                output = decrypt(input);
	                System.out.println("解密后的字符串为：" + output);
	                break;
	            default:
	                System.out.println("无效的选择");
	                break;

	    }
	}

}